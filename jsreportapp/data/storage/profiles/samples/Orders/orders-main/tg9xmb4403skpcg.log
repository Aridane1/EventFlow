{"type":"operationStart","subtype":"profile","data":{"_id":"2ZpbLIKAGVqHAyKw","timestamp":"2024-01-09T20:37:51.476Z","state":"queued","mode":"standard","creationDate":"2024-01-09T20:37:51.479Z","modificationDate":"2024-01-09T20:37:51.479Z","shortid":"kympwiS","$entitySet":"profiles"},"doDiffs":false,"timestamp":1704832671478,"id":"xg7mf5h63rxt2bu","previousOperationId":null,"operationId":"wt29o35ec7uixbk"}
{"type":"log","level":"info","message":"Render request 6 queued for execution and waiting for available worker","previousOperationId":"wt29o35ec7uixbk","timestamp":1704832671478,"id":"0nv5qvmyiiarowv"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"wt29o35ec7uixbk","timestamp":1704832671495,"id":"orp9dpv285cj6n0","previousEventId":"xg7mf5h63rxt2bu","operationId":"c03rswrefvkf5r2"}
{"type":"log","timestamp":1704832671496,"level":"info","message":"Starting rendering request 6","meta":{"rootId":"tg9xmb4403skpcg","id":"tg9xmb4403skpcg"},"id":"p5ypp9s1pync0qb","previousOperationId":"c03rswrefvkf5r2"}
{"type":"log","timestamp":1704832671496,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"tg9xmb4403skpcg","id":"tg9xmb4403skpcg"},"id":"naauan3byeun5iv","previousOperationId":"c03rswrefvkf5r2"}
{"type":"log","timestamp":1704832671498,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"tg9xmb4403skpcg","id":"tg9xmb4403skpcg"},"id":"6b5bovqcbvedbj2","previousOperationId":"c03rswrefvkf5r2"}
{"type":"log","timestamp":1704832671505,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"tg9xmb4403skpcg","id":"tg9xmb4403skpcg"},"id":"oclw3xyvcik628g","previousOperationId":"c03rswrefvkf5r2"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1704832671523,"id":"9f7h2wjmm6vco67","previousEventId":"orp9dpv285cj6n0","operationId":"3w2h6je6kynluev","previousOperationId":"c03rswrefvkf5r2"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"3w2h6je6kynluev","timestamp":1704832671523,"id":"m4vxybrp0cqzwhx","previousEventId":"9f7h2wjmm6vco67","operationId":"rv1ii9evfm7nrq5"}
{"type":"log","timestamp":1704832671528,"level":"warn","message":"Error when processing render request 6\n(because) error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'http')\n\n(sandbox.js line 52:30)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |     console.log(req.contenxt.http.query)\n     |                              ^\n  53 |     req.data.orders = await prepareDataSource()\n  54 | }\n\n(sandbox.js line 66:18)\nTypeError: Cannot read properties of undefined (reading 'http')\n    at Object.beforeRender (sandbox.js:52:30)\n    at executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:35)\n    at sandbox.js:66:18\n    at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:137:16)\n    at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n    at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)\n    at async beforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\render\\render.js:24:5)","meta":{"rootId":"tg9xmb4403skpcg","id":"tg9xmb4403skpcg"},"id":"5ku0o7maoir7vbm","previousOperationId":"rv1ii9evfm7nrq5"}
{"type":"log","timestamp":1704832671528,"level":"warn","message":"Rendering request 6 finished with error in 52 ms","meta":{"rootId":"tg9xmb4403skpcg","id":"tg9xmb4403skpcg"},"id":"udq48t0vcjunbbk","previousOperationId":"rv1ii9evfm7nrq5"}
{"type":"error","timestamp":1704832671540,"statusCode":400,"weak":true,"lineNumber":52,"decoratedSuffix":"\n\n(sandbox.js line 52:30)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |     console.log(req.contenxt.http.query)\n     |                              ^\n  53 |     req.data.orders = await prepareDataSource()\n  54 | }\n\n(sandbox.js line 66:18)","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst https = require('https');\n\n// call remote http rest api\nfunction fetchOrders() {\n    return new Promise((resolve, reject) => {\n        https.get(`https://services.odata.org/V4/Northwind/Northwind.svc/Orders`,\n        (result) => {\n            var str = '';\n            result.on('data', (b) => str += b);\n            result.on('error', reject);\n            result.on('end', () => resolve(JSON.parse(str).value));\n        });\n    })\n}\n\n// group the data for report\nasync function prepareDataSource() {\n    const orders = await fetchOrders()\n    const ordersByShipCountry = orders.reduce((a, v) => {\n        a[v.ShipCountry] = a[v.ShipCountry] || []\n        a[v.ShipCountry].push(v)\n        return a\n    }, {})\n\n    return Object.keys(ordersByShipCountry).map((country) => {\n        const ordersInCountry = ordersByShipCountry[country]\n\n        const accumulated = {}\n\n        ordersInCountry.forEach((o) => {\n            o.OrderDate = new Date(o.OrderDate);\n            const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n            accumulated[key] = accumulated[key] || {\n                value: 0,\n                orderDate: o.OrderDate\n            };\n            accumulated[key].value++;\n        });\n\n        return {\n            rows: ordersInCountry,\n            country,\n            accumulated\n        }\n\n    }).slice(0, 2)\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    console.log(req.contenxt.http.query)\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"rv1ii9evfm7nrq5","id":"jlixisoedaa8a9q","stack":"TypeError: Cannot read properties of undefined (reading 'http')\n    at Object.beforeRender (sandbox.js:52:30)\n    at executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:35)\n    at sandbox.js:66:18\n    at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:137:16)\n    at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n    at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)\n    at async beforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\render\\render.js:24:5)","message":"Error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'http')\n\n(sandbox.js line 52:30)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |     console.log(req.contenxt.http.query)\n     |                              ^\n  53 |     req.data.orders = await prepareDataSource()\n  54 | }\n\n(sandbox.js line 66:18)"}
