{"type":"operationStart","subtype":"profile","data":{"_id":"OE17qYTsL3AmwS3o","timestamp":"2024-01-14T18:06:07.202Z","state":"queued","mode":"standard","creationDate":"2024-01-14T18:06:07.211Z","modificationDate":"2024-01-14T18:06:07.211Z","shortid":"gwQBPiW","$entitySet":"profiles"},"doDiffs":false,"timestamp":1705255567205,"id":"ye16lcy4zauwei8","previousOperationId":null,"operationId":"wtps9pkfurs6p9k"}
{"type":"log","level":"info","message":"Render request 1 queued for execution and waiting for available worker","previousOperationId":"wtps9pkfurs6p9k","timestamp":1705255567207,"id":"quqscm5kyn7yo88"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"wtps9pkfurs6p9k","timestamp":1705255567262,"id":"ge1crp26rglmfd0","previousEventId":"ye16lcy4zauwei8","operationId":"u387dukziys8vyc"}
{"type":"log","timestamp":1705255567263,"level":"info","message":"Starting rendering request 1","meta":{"rootId":"58trm8nf50xoh7r","id":"58trm8nf50xoh7r"},"id":"f4b4nt289qhmdgr","previousOperationId":"u387dukziys8vyc"}
{"type":"log","timestamp":1705255567264,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"58trm8nf50xoh7r","id":"58trm8nf50xoh7r"},"id":"3ta4vi6zt89m0zf","previousOperationId":"u387dukziys8vyc"}
{"type":"log","timestamp":1705255567268,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"58trm8nf50xoh7r","id":"58trm8nf50xoh7r"},"id":"9i98zuz7k5tbh6s","previousOperationId":"u387dukziys8vyc"}
{"type":"log","timestamp":1705255567274,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"58trm8nf50xoh7r","id":"58trm8nf50xoh7r"},"id":"tabqfatks58cuzu","previousOperationId":"u387dukziys8vyc"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1705255567603,"id":"ahd9nlfzk6jzcwe","previousEventId":"ge1crp26rglmfd0","operationId":"qtyt1uakil5yg78","previousOperationId":"u387dukziys8vyc"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"qtyt1uakil5yg78","timestamp":1705255567603,"id":"211ykuf083wmpfl","previousEventId":"ahd9nlfzk6jzcwe","operationId":"1ytuytjt56l5pwj"}
{"type":"log","timestamp":1705255567645,"level":"warn","message":"Error when processing render request 1\n(because) error when evaluating custom script /samples/Orders/orders-script\nlocations is not defined\n\n(sandbox.js line 43:18)\n\n  41 | async function prepareDataSource() {\n  42 |   const orders = await fetchLocations();\n> 43 |   const source = locations.map((location) => {\n     |                  ^\n  44 |     name: location.name;\n  45 |     numEventos: location.numEvento;\n  46 |   });\n\n(sandbox.js line 52:21)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |   req.data.orders = await prepareDataSource();\n     |                     ^\n  53 | }\n  54 |\n\n\nReferenceError: locations is not defined\n    at prepareDataSource (sandbox.js:43:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Object.beforeRender (sandbox.js:52:21)\n    at async executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:137:16)\n    at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n    at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","meta":{"rootId":"58trm8nf50xoh7r","id":"58trm8nf50xoh7r"},"id":"vm94cbzsk7vcf8y","previousOperationId":"1ytuytjt56l5pwj"}
{"type":"log","timestamp":1705255567645,"level":"warn","message":"Rendering request 1 finished with error in 444 ms","meta":{"rootId":"58trm8nf50xoh7r","id":"58trm8nf50xoh7r"},"id":"8jkug4fbq6ve52w","previousOperationId":"1ytuytjt56l5pwj"}
{"type":"error","timestamp":1705255567664,"statusCode":400,"weak":true,"lineNumber":43,"decoratedSuffix":"\n\n(sandbox.js line 43:18)\n\n  41 | async function prepareDataSource() {\n  42 |   const orders = await fetchLocations();\n> 43 |   const source = locations.map((location) => {\n     |                  ^\n  44 |     name: location.name;\n  45 |     numEventos: location.numEvento;\n  46 |   });\n\n(sandbox.js line 52:21)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |   req.data.orders = await prepareDataSource();\n     |                     ^\n  53 | }\n  54 |\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require(\"http\");\n\n// call remote http rest api\nfunction fetchLocations() {\n  return new Promise((resolve, reject) => {\n    http.get(\n      \"http://localhost:8080/api/locations/count-localizaciones\",\n      (result) => {\n        let str = \"\";\n\n        result.on(\"data\", (chunk) => {\n          str += chunk;\n        });\n\n        result.on(\"error\", (err) => {\n          reject(err);\n        });\n\n        result.on(\"end\", () => {\n          try {\n            const parsedData = JSON.parse(str);\n            // Verificar que 'localizaciones' existe en la respuesta JSON\n            if (parsedData && parsedData.localizaciones) {\n              resolve(parsedData.localizaciones);\n            } else {\n              reject(\n                new Error(\"El formato de la respuesta no es el esperado.\")\n              );\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n      }\n    );\n  });\n}\n\n// group the data for report\nasync function prepareDataSource() {\n  const orders = await fetchLocations();\n  const source = locations.map((location) => {\n    name: location.name;\n    numEventos: location.numEvento;\n  });\n  console.log(source);\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n  req.data.orders = await prepareDataSource();\n}\n"},"property":"content","logged":true,"previousOperationId":"1ytuytjt56l5pwj","id":"x5nsz715or7uqcj","stack":"ReferenceError: locations is not defined\n    at prepareDataSource (sandbox.js:43:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Object.beforeRender (sandbox.js:52:21)\n    at async executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:137:16)\n    at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n    at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","message":"Error when evaluating custom script /samples/Orders/orders-script\nlocations is not defined\n\n(sandbox.js line 43:18)\n\n  41 | async function prepareDataSource() {\n  42 |   const orders = await fetchLocations();\n> 43 |   const source = locations.map((location) => {\n     |                  ^\n  44 |     name: location.name;\n  45 |     numEventos: location.numEvento;\n  46 |   });\n\n(sandbox.js line 52:21)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |   req.data.orders = await prepareDataSource();\n     |                     ^\n  53 | }\n  54 |\n\n"}
