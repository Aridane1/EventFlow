{"type":"operationStart","subtype":"profile","data":{"_id":"3NMbR2zJaRlShQmM","timestamp":"2024-01-14T17:14:48.458Z","state":"queued","mode":"standard","creationDate":"2024-01-14T17:14:48.462Z","modificationDate":"2024-01-14T17:14:48.462Z","shortid":"2wyDeIE","$entitySet":"profiles"},"doDiffs":false,"timestamp":1705252488460,"id":"b0520nw3xhdmon9","previousOperationId":null,"operationId":"fo9hevq5okvrk01"}
{"type":"log","level":"info","message":"Render request 2 queued for execution and waiting for available worker","previousOperationId":"fo9hevq5okvrk01","timestamp":1705252488460,"id":"m7nzq7dxw8pp11b"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"fo9hevq5okvrk01","timestamp":1705252488483,"id":"h5am96k3k5x36nx","previousEventId":"b0520nw3xhdmon9","operationId":"ovm49ztmdnp26gv"}
{"type":"log","timestamp":1705252488483,"level":"info","message":"Starting rendering request 2","meta":{"rootId":"my2os7vwlr2dh6p","id":"my2os7vwlr2dh6p"},"id":"x6xah4cvvytrpbo","previousOperationId":"ovm49ztmdnp26gv"}
{"type":"log","timestamp":1705252488485,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"my2os7vwlr2dh6p","id":"my2os7vwlr2dh6p"},"id":"dx5ywfks7ajz0eu","previousOperationId":"ovm49ztmdnp26gv"}
{"type":"log","timestamp":1705252488490,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"my2os7vwlr2dh6p","id":"my2os7vwlr2dh6p"},"id":"ptus291e4z3ppy7","previousOperationId":"ovm49ztmdnp26gv"}
{"type":"log","timestamp":1705252488497,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"my2os7vwlr2dh6p","id":"my2os7vwlr2dh6p"},"id":"8gs82fi7aqbbjqi","previousOperationId":"ovm49ztmdnp26gv"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1705252488811,"id":"9h1q6e2p6faqu6u","previousEventId":"h5am96k3k5x36nx","operationId":"mer2ky3lh9nypjz","previousOperationId":"ovm49ztmdnp26gv"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"mer2ky3lh9nypjz","timestamp":1705252488811,"id":"0zj1omh75z4cvkl","previousEventId":"9h1q6e2p6faqu6u","operationId":"7yg0erxxqza8lgr"}
{"type":"log","timestamp":1705252488814,"level":"debug","message":"(console:log) { profilerMode: 'standard' }","meta":{"userLevel":true,"rootId":"my2os7vwlr2dh6p","id":"my2os7vwlr2dh6p"},"id":"kzu9ggh6etv7ddr","previousOperationId":"7yg0erxxqza8lgr"}
{"type":"log","timestamp":1705252488827,"level":"warn","message":"Error when processing render request 2\n(because) error when evaluating custom script /samples/Orders/orders-script\nProtocol \"http:\" not supported. Expected \"https:\"\n\n(sandbox.js line 7:11)\n\n   5 | function fetchOrders() {\n   6 |   return new Promise((resolve, reject) => {\n>  7 |     https.get(\n     |           ^\n   8 |       `http://localhost:8080/api/locations/count-localizaciones`,\n   9 |       (result) => {\n  10 |         var str = \"\";\n\n(sandbox.js line 6:10)\n\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n> 6 |   return new Promise((resolve, reject) => {\n    |          ^\n  7 |     https.get(\n  8 |       `http://localhost:8080/api/locations/count-localizaciones`,\n  9 |       (result) => {\n\n(sandbox.js line 21:24)\n\n  19 | // group the data for report\n  20 | async function prepareDataSource() {\n> 21 |   const orders = await fetchOrders();\n     |                        ^\n  22 |   const ordersByShipCountry = orders.reduce((a, v) => {\n  23 |     a[v.ShipCountry] = a[v.ShipCountry] || [];\n  24 |     a[v.ShipCountry].push(v);\n\n(sandbox.js line 57:27)\n\n  55 | async function beforeRender(req, res) {\n  56 |   console.log(req.context.http.query);\n> 57 |   req.data.orders = await prepareDataSource();\n     |                           ^\n  58 | }\n  59 |\n  60 | async function aaa() {\n\n\nTypeError [ERR_INVALID_PROTOCOL]: Protocol \"http:\" not supported. Expected \"https:\"\n    at new NodeError (node:internal/errors:405:5)\n    at new ClientRequest (node:_http_client:188:11)\n    at request (node:https:358:10)\n    at Object.get (node:https:392:15)\n    at sandbox.js:7:11\n    at new Promise (<anonymous>)\n    at fetchOrders (sandbox.js:6:10)\n    at prepareDataSource (sandbox.js:21:24)\n    at Object.beforeRender (sandbox.js:57:27)\n    at executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:35)","meta":{"rootId":"my2os7vwlr2dh6p","id":"my2os7vwlr2dh6p"},"id":"uq59br7sgyayzna","previousOperationId":"7yg0erxxqza8lgr"}
{"type":"log","timestamp":1705252488827,"level":"warn","message":"Rendering request 2 finished with error in 370 ms","meta":{"rootId":"my2os7vwlr2dh6p","id":"my2os7vwlr2dh6p"},"id":"jsczq5kcdtwk6bn","previousOperationId":"7yg0erxxqza8lgr"}
{"type":"error","timestamp":1705252488848,"code":"ERR_INVALID_PROTOCOL","statusCode":400,"weak":true,"decoratedSuffix":"\n\n(sandbox.js line 7:11)\n\n   5 | function fetchOrders() {\n   6 |   return new Promise((resolve, reject) => {\n>  7 |     https.get(\n     |           ^\n   8 |       `http://localhost:8080/api/locations/count-localizaciones`,\n   9 |       (result) => {\n  10 |         var str = \"\";\n\n(sandbox.js line 6:10)\n\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n> 6 |   return new Promise((resolve, reject) => {\n    |          ^\n  7 |     https.get(\n  8 |       `http://localhost:8080/api/locations/count-localizaciones`,\n  9 |       (result) => {\n\n(sandbox.js line 21:24)\n\n  19 | // group the data for report\n  20 | async function prepareDataSource() {\n> 21 |   const orders = await fetchOrders();\n     |                        ^\n  22 |   const ordersByShipCountry = orders.reduce((a, v) => {\n  23 |     a[v.ShipCountry] = a[v.ShipCountry] || [];\n  24 |     a[v.ShipCountry].push(v);\n\n(sandbox.js line 57:27)\n\n  55 | async function beforeRender(req, res) {\n  56 |   console.log(req.context.http.query);\n> 57 |   req.data.orders = await prepareDataSource();\n     |                           ^\n  58 | }\n  59 |\n  60 | async function aaa() {\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst https = require(\"https\");\n\n// call remote http rest api\nfunction fetchOrders() {\n  return new Promise((resolve, reject) => {\n    https.get(\n      `http://localhost:8080/api/locations/count-localizaciones`,\n      (result) => {\n        var str = \"\";\n        result.on(\"data\", (b) => (str += b));\n        result.on(\"error\", reject);\n        result.on(\"end\", () => resolve(JSON.parse(str).value));\n      }\n    );\n  });\n}\n\n// group the data for report\nasync function prepareDataSource() {\n  const orders = await fetchOrders();\n  const ordersByShipCountry = orders.reduce((a, v) => {\n    a[v.ShipCountry] = a[v.ShipCountry] || [];\n    a[v.ShipCountry].push(v);\n    return a;\n  }, {});\n\n  return Object.keys(ordersByShipCountry)\n    .map((country) => {\n      const ordersInCountry = ordersByShipCountry[country];\n\n      const accumulated = {};\n\n      ordersInCountry.forEach((o) => {\n        o.OrderDate = new Date(o.OrderDate);\n        const key =\n          o.OrderDate.getFullYear() + \"/\" + (o.OrderDate.getMonth() + 1);\n        accumulated[key] = accumulated[key] || {\n          value: 0,\n          orderDate: o.OrderDate,\n        };\n        accumulated[key].value++;\n      });\n\n      return {\n        rows: ordersInCountry,\n        country,\n        accumulated,\n      };\n    })\n    .slice(0, 2);\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n  console.log(req.context.http.query);\n  req.data.orders = await prepareDataSource();\n}\n\nasync function aaa() {\n  return req.context.http.query;\n  req.data.orders = await prepareDataSource();\n}\n"},"property":"content","logged":true,"previousOperationId":"7yg0erxxqza8lgr","id":"a0e2ulf4acdwoim","stack":"TypeError [ERR_INVALID_PROTOCOL]: Protocol \"http:\" not supported. Expected \"https:\"\n    at new NodeError (node:internal/errors:405:5)\n    at new ClientRequest (node:_http_client:188:11)\n    at request (node:https:358:10)\n    at Object.get (node:https:392:15)\n    at sandbox.js:7:11\n    at new Promise (<anonymous>)\n    at fetchOrders (sandbox.js:6:10)\n    at prepareDataSource (sandbox.js:21:24)\n    at Object.beforeRender (sandbox.js:57:27)\n    at executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:35)","message":"Error when evaluating custom script /samples/Orders/orders-script\nProtocol \"http:\" not supported. Expected \"https:\"\n\n(sandbox.js line 7:11)\n\n   5 | function fetchOrders() {\n   6 |   return new Promise((resolve, reject) => {\n>  7 |     https.get(\n     |           ^\n   8 |       `http://localhost:8080/api/locations/count-localizaciones`,\n   9 |       (result) => {\n  10 |         var str = \"\";\n\n(sandbox.js line 6:10)\n\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n> 6 |   return new Promise((resolve, reject) => {\n    |          ^\n  7 |     https.get(\n  8 |       `http://localhost:8080/api/locations/count-localizaciones`,\n  9 |       (result) => {\n\n(sandbox.js line 21:24)\n\n  19 | // group the data for report\n  20 | async function prepareDataSource() {\n> 21 |   const orders = await fetchOrders();\n     |                        ^\n  22 |   const ordersByShipCountry = orders.reduce((a, v) => {\n  23 |     a[v.ShipCountry] = a[v.ShipCountry] || [];\n  24 |     a[v.ShipCountry].push(v);\n\n(sandbox.js line 57:27)\n\n  55 | async function beforeRender(req, res) {\n  56 |   console.log(req.context.http.query);\n> 57 |   req.data.orders = await prepareDataSource();\n     |                           ^\n  58 | }\n  59 |\n  60 | async function aaa() {\n\n"}
