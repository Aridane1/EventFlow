{"type":"operationStart","subtype":"profile","data":{"_id":"c5vUPAiyhmiVdfll","timestamp":"2024-01-14T17:36:26.630Z","state":"queued","mode":"standard","creationDate":"2024-01-14T17:36:26.634Z","modificationDate":"2024-01-14T17:36:26.634Z","shortid":"NfbQ93R","$entitySet":"profiles"},"doDiffs":false,"timestamp":1705253786631,"id":"w2hs7h6oz58a614","previousOperationId":null,"operationId":"0ef7bjadzawyb4s"}
{"type":"log","level":"info","message":"Render request 1 queued for execution and waiting for available worker","previousOperationId":"0ef7bjadzawyb4s","timestamp":1705253786632,"id":"wk21286j14jbtem"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"0ef7bjadzawyb4s","timestamp":1705253786669,"id":"rtwknza5s35xhh5","previousEventId":"w2hs7h6oz58a614","operationId":"idz82w5lcy1ou61"}
{"type":"log","timestamp":1705253786671,"level":"info","message":"Starting rendering request 1","meta":{"rootId":"zg8gq66021eoqm1","id":"zg8gq66021eoqm1"},"id":"vrp82a26hinlccx","previousOperationId":"idz82w5lcy1ou61"}
{"type":"log","timestamp":1705253786673,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"zg8gq66021eoqm1","id":"zg8gq66021eoqm1"},"id":"f031mncd59h6elp","previousOperationId":"idz82w5lcy1ou61"}
{"type":"log","timestamp":1705253786677,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"zg8gq66021eoqm1","id":"zg8gq66021eoqm1"},"id":"qlz10034f0lclqs","previousOperationId":"idz82w5lcy1ou61"}
{"type":"log","timestamp":1705253786683,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"zg8gq66021eoqm1","id":"zg8gq66021eoqm1"},"id":"rjql5f1n4owpopk","previousOperationId":"idz82w5lcy1ou61"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1705253787061,"id":"wfp46l43ub34lr5","previousEventId":"rtwknza5s35xhh5","operationId":"4t0d430w4di93qp","previousOperationId":"idz82w5lcy1ou61"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"4t0d430w4di93qp","timestamp":1705253787061,"id":"1rt00sdlk48sxx7","previousEventId":"wfp46l43ub34lr5","operationId":"lu9m6bym3kw4yhp"}
{"type":"log","timestamp":1705253787105,"level":"warn","message":"Error when processing render request 1\n(because) error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'reduce')\n\n(sandbox.js line 22:38)\n\n  20 | async function prepareDataSource() {\n  21 |   const orders = await fetchOrders();\n> 22 |   const ordersByShipCountry = orders.reduce((a, v) => {\n     |                                      ^\n  23 |     a[v.ShipCountry] = a[v.ShipCountry] || [];\n  24 |     a[v.ShipCountry].push(v);\n  25 |     return a;\n\n(sandbox.js line 57:21)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |   req.data.orders = await prepareDataSource();\n     |                     ^\n  58 | }\n  59 |\n\n\nTypeError: Cannot read properties of undefined (reading 'reduce')\n    at prepareDataSource (sandbox.js:22:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Object.beforeRender (sandbox.js:57:21)\n    at async executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:137:16)\n    at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n    at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","meta":{"rootId":"zg8gq66021eoqm1","id":"zg8gq66021eoqm1"},"id":"15eeg3wtwy8gyyi","previousOperationId":"lu9m6bym3kw4yhp"}
{"type":"log","timestamp":1705253787105,"level":"warn","message":"Rendering request 1 finished with error in 476 ms","meta":{"rootId":"zg8gq66021eoqm1","id":"zg8gq66021eoqm1"},"id":"wtbl57hz1256ocj","previousOperationId":"lu9m6bym3kw4yhp"}
{"type":"error","timestamp":1705253787119,"statusCode":400,"weak":true,"lineNumber":22,"decoratedSuffix":"\n\n(sandbox.js line 22:38)\n\n  20 | async function prepareDataSource() {\n  21 |   const orders = await fetchOrders();\n> 22 |   const ordersByShipCountry = orders.reduce((a, v) => {\n     |                                      ^\n  23 |     a[v.ShipCountry] = a[v.ShipCountry] || [];\n  24 |     a[v.ShipCountry].push(v);\n  25 |     return a;\n\n(sandbox.js line 57:21)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |   req.data.orders = await prepareDataSource();\n     |                     ^\n  58 | }\n  59 |\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require(\"http\");\n\n// call remote http rest api\nfunction fetchOrders() {\n  return new Promise((resolve, reject) => {\n    http.get(\n      `http://localhost:8080/api/locations/count-localizaciones`,\n      (result) => {\n        var str = \"\";\n        result.on(\"data\", (b) => (str += b));\n        result.on(\"error\", reject);\n        result.on(\"end\", () => resolve(JSON.parse(str).value));\n      }\n    );\n  });\n}\n\n// group the data for report\nasync function prepareDataSource() {\n  const orders = await fetchOrders();\n  const ordersByShipCountry = orders.reduce((a, v) => {\n    a[v.ShipCountry] = a[v.ShipCountry] || [];\n    a[v.ShipCountry].push(v);\n    return a;\n  }, {});\n  console.log(ordersByShipCountry);\n\n  return Object.keys(ordersByShipCountry)\n    .map((country) => {\n      const ordersInCountry = ordersByShipCountry[country];\n\n      const accumulated = {};\n\n      ordersInCountry.forEach((o) => {\n        o.OrderDate = new Date(o.OrderDate);\n        const key =\n          o.OrderDate.getFullYear() + \"/\" + (o.OrderDate.getMonth() + 1);\n        accumulated[key] = accumulated[key] || {\n          value: 0,\n          orderDate: o.OrderDate,\n        };\n        accumulated[key].value++;\n      });\n\n      return {\n        rows: ordersInCountry,\n        country,\n        accumulated,\n      };\n    })\n    .slice(0, 2);\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n  req.data.orders = await prepareDataSource();\n}\n"},"property":"content","logged":true,"previousOperationId":"lu9m6bym3kw4yhp","id":"9fbyv9cmyz4sukj","stack":"TypeError: Cannot read properties of undefined (reading 'reduce')\n    at prepareDataSource (sandbox.js:22:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Object.beforeRender (sandbox.js:57:21)\n    at async executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:137:16)\n    at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n    at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","message":"Error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'reduce')\n\n(sandbox.js line 22:38)\n\n  20 | async function prepareDataSource() {\n  21 |   const orders = await fetchOrders();\n> 22 |   const ordersByShipCountry = orders.reduce((a, v) => {\n     |                                      ^\n  23 |     a[v.ShipCountry] = a[v.ShipCountry] || [];\n  24 |     a[v.ShipCountry].push(v);\n  25 |     return a;\n\n(sandbox.js line 57:21)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |   req.data.orders = await prepareDataSource();\n     |                     ^\n  58 | }\n  59 |\n\n"}
