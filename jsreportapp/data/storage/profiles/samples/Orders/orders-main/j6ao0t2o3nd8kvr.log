{"type":"operationStart","subtype":"profile","data":{"_id":"4W72vSIIPo5mVxJ4","timestamp":"2024-01-09T19:59:24.555Z","state":"queued","mode":"standard","creationDate":"2024-01-09T19:59:24.559Z","modificationDate":"2024-01-09T19:59:24.559Z","shortid":"GoaIcwQ","$entitySet":"profiles"},"doDiffs":false,"timestamp":1704830364557,"id":"y7wwwv8y4dfkg0k","previousOperationId":null,"operationId":"e8kpxlb5ngm0gb7"}
{"type":"log","level":"info","message":"Render request 3 queued for execution and waiting for available worker","previousOperationId":"e8kpxlb5ngm0gb7","timestamp":1704830364558,"id":"q1a777z5nw36iox"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"e8kpxlb5ngm0gb7","timestamp":1704830364577,"id":"ev81ct06xl9ofug","previousEventId":"y7wwwv8y4dfkg0k","operationId":"i53bvnhjb2iy1fh"}
{"type":"log","timestamp":1704830364578,"level":"info","message":"Starting rendering request 3","meta":{"rootId":"j6ao0t2o3nd8kvr","id":"j6ao0t2o3nd8kvr"},"id":"071ngfffnf071cu","previousOperationId":"i53bvnhjb2iy1fh"}
{"type":"log","timestamp":1704830364578,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"j6ao0t2o3nd8kvr","id":"j6ao0t2o3nd8kvr"},"id":"43yjawiv5fttunh","previousOperationId":"i53bvnhjb2iy1fh"}
{"type":"log","timestamp":1704830364580,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"j6ao0t2o3nd8kvr","id":"j6ao0t2o3nd8kvr"},"id":"xapnn47pzoj3il6","previousOperationId":"i53bvnhjb2iy1fh"}
{"type":"log","timestamp":1704830364588,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"j6ao0t2o3nd8kvr","id":"j6ao0t2o3nd8kvr"},"id":"cl4rhgg35tyxowb","previousOperationId":"i53bvnhjb2iy1fh"}
{"type":"log","timestamp":1704830364646,"level":"warn","message":"Error when processing render request 3\n(because) error when evaluating custom script /samples/Orders/orders-script\nrequire of \"https\" module has been blocked. To be able to require custom modules you need to add to configuration { \"trustUserCode\": true } or enable just specific module using { sandbox: { allowedModules\": [\"https\"] }\n\n(sandbox.js line 2:15)\n\n  1 | // server side script fetching remote data and preparing report data source\n> 2 | const https = require('https');\n    |               ^\n  3 |\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n\n\nError: require of \"https\" module has been blocked. To be able to require custom modules you need to add to configuration { \"trustUserCode\": true } or enable just specific module using { sandbox: { allowedModules\": [\"https\"] }\n  at sandboxRequire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\requireSandbox.js:53:19)\n  at Object.require (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:89:30)\n  at eval (sandbox.js:2:15)\n  at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:132:18)\n  at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n  at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n  at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n  at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n  at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)\n  at async beforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\render\\render.js:24:5)\n  at async WorkerReporter._render (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\render\\render.js:141:7)\n  at async C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\reporter.js:224:19\n  at async processAndResponse (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\advanced-workers\\lib\\workerHandler.js:41:17)","meta":{"rootId":"j6ao0t2o3nd8kvr","id":"j6ao0t2o3nd8kvr"},"id":"kw090kb73wi6bn7","previousOperationId":"i53bvnhjb2iy1fh"}
{"type":"log","timestamp":1704830364646,"level":"warn","message":"Rendering request 3 finished with error in 91 ms","meta":{"rootId":"j6ao0t2o3nd8kvr","id":"j6ao0t2o3nd8kvr"},"id":"8uy23k75hsj3eg9","previousOperationId":"i53bvnhjb2iy1fh"}
{"type":"error","timestamp":1704830364658,"statusCode":400,"weak":true,"decoratedSuffix":"\n\n(sandbox.js line 2:15)\n\n  1 | // server side script fetching remote data and preparing report data source\n> 2 | const https = require('https');\n    |               ^\n  3 |\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst https = require('https');\n\n// call remote http rest api\nfunction fetchOrders() {\n    return new Promise((resolve, reject) => {\n        https.get('https://services.odata.org/V4/Northwind/Northwind.svc/Orders',\n        (result) => {\n            var str = '';\n            result.on('data', (b) => str += b);\n            result.on('error', reject);\n            result.on('end', () => resolve(JSON.parse(str).value));\n        });\n    })\n}\n\n// group the data for report\nasync function prepareDataSource() {\n    const orders = await fetchOrders()\n    const ordersByShipCountry = orders.reduce((a, v) => {\n        a[v.ShipCountry] = a[v.ShipCountry] || []\n        a[v.ShipCountry].push(v)\n        return a\n    }, {})\n\n    return Object.keys(ordersByShipCountry).map((country) => {\n        const ordersInCountry = ordersByShipCountry[country]\n\n        const accumulated = {}\n\n        ordersInCountry.forEach((o) => {\n            o.OrderDate = new Date(o.OrderDate);\n            const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n            accumulated[key] = accumulated[key] || {\n                value: 0,\n                orderDate: o.OrderDate\n            };\n            accumulated[key].value++;\n        });\n\n        return {\n            rows: ordersInCountry,\n            country,\n            accumulated\n        }\n\n    }).slice(0, 2)\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"i53bvnhjb2iy1fh","id":"7qcpb55787fd43x","stack":"Error: require of \"https\" module has been blocked. To be able to require custom modules you need to add to configuration { \"trustUserCode\": true } or enable just specific module using { sandbox: { allowedModules\": [\"https\"] }\n  at sandboxRequire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\requireSandbox.js:53:19)\n  at Object.require (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:89:30)\n  at eval (sandbox.js:2:15)\n  at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:132:18)\n  at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n  at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n  at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n  at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n  at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)\n  at async beforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\render\\render.js:24:5)\n  at async WorkerReporter._render (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\render\\render.js:141:7)\n  at async C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\reporter.js:224:19\n  at async processAndResponse (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\advanced-workers\\lib\\workerHandler.js:41:17)","message":"Error when evaluating custom script /samples/Orders/orders-script\nrequire of \"https\" module has been blocked. To be able to require custom modules you need to add to configuration { \"trustUserCode\": true } or enable just specific module using { sandbox: { allowedModules\": [\"https\"] }\n\n(sandbox.js line 2:15)\n\n  1 | // server side script fetching remote data and preparing report data source\n> 2 | const https = require('https');\n    |               ^\n  3 |\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n\n"}
