{"type":"operationStart","subtype":"profile","data":{"_id":"DUaelf9EhexQCAud","timestamp":"2024-01-09T20:31:06.918Z","state":"queued","mode":"standard","creationDate":"2024-01-09T20:31:06.921Z","modificationDate":"2024-01-09T20:31:06.921Z","shortid":"rt53JLg","$entitySet":"profiles"},"doDiffs":false,"timestamp":1704832266919,"id":"blydm8kij0tv4pb","previousOperationId":null,"operationId":"y5z9dx1hgw1ah7z"}
{"type":"log","level":"info","message":"Render request 5 queued for execution and waiting for available worker","previousOperationId":"y5z9dx1hgw1ah7z","timestamp":1704832266919,"id":"uavyg6cetaw5za2"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"y5z9dx1hgw1ah7z","timestamp":1704832266935,"id":"1c71tw4yignovzj","previousEventId":"blydm8kij0tv4pb","operationId":"1xgq1o1lfvjxqj1"}
{"type":"log","timestamp":1704832266935,"level":"info","message":"Starting rendering request 5","meta":{"rootId":"kw7cutxqcy1g4bj","id":"kw7cutxqcy1g4bj"},"id":"um6zg09eihhlsun","previousOperationId":"1xgq1o1lfvjxqj1"}
{"type":"log","timestamp":1704832266935,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"kw7cutxqcy1g4bj","id":"kw7cutxqcy1g4bj"},"id":"arxpd1apgm4k45n","previousOperationId":"1xgq1o1lfvjxqj1"}
{"type":"log","timestamp":1704832266936,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"kw7cutxqcy1g4bj","id":"kw7cutxqcy1g4bj"},"id":"2rvby9tb3un247x","previousOperationId":"1xgq1o1lfvjxqj1"}
{"type":"log","timestamp":1704832266941,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"kw7cutxqcy1g4bj","id":"kw7cutxqcy1g4bj"},"id":"apyjheky9p2h8bm","previousOperationId":"1xgq1o1lfvjxqj1"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1704832266968,"id":"olnhcuzubtv9ti5","previousEventId":"1c71tw4yignovzj","operationId":"be4tv8lgrlvrlnp","previousOperationId":"1xgq1o1lfvjxqj1"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"be4tv8lgrlvrlnp","timestamp":1704832266968,"id":"hhoqndd9n470mnq","previousEventId":"olnhcuzubtv9ti5","operationId":"lstihu1tiuuxl7r"}
{"type":"log","timestamp":1704832266978,"level":"warn","message":"Error when processing render request 5\n(because) error when evaluating custom script /samples/Orders/orders-script\nwindow is not defined\n\n(sandbox.js line 19:17)\n\n  17 | // group the data for report\n  18 | async function prepareDataSource() {\n> 19 |     console.log(window.location)\n     |                 ^\n  20 |     const orders = await fetchOrders()\n  21 |     const ordersByShipCountry = orders.reduce((a, v) => {\n  22 |         a[v.ShipCountry] = a[v.ShipCountry] || []\n\n(sandbox.js line 53:29)\n\n  51 | // add jsreport hook which modifies the report input data\n  52 | async function beforeRender(req, res) {\n> 53 |     req.data.orders = await prepareDataSource()\n     |                             ^\n  54 | }\n\n(sandbox.js line 66:18)\nReferenceError: window is not defined\n    at prepareDataSource (sandbox.js:19:17)\n    at Object.beforeRender (sandbox.js:53:29)\n    at executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:35)\n    at sandbox.js:66:18\n    at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:137:16)\n    at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n    at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","meta":{"rootId":"kw7cutxqcy1g4bj","id":"kw7cutxqcy1g4bj"},"id":"9aibyis3bssksca","previousOperationId":"lstihu1tiuuxl7r"}
{"type":"log","timestamp":1704832266978,"level":"warn","message":"Rendering request 5 finished with error in 61 ms","meta":{"rootId":"kw7cutxqcy1g4bj","id":"kw7cutxqcy1g4bj"},"id":"1255ozu2kbyrm78","previousOperationId":"lstihu1tiuuxl7r"}
{"type":"error","timestamp":1704832266990,"statusCode":400,"weak":true,"lineNumber":19,"decoratedSuffix":"\n\n(sandbox.js line 19:17)\n\n  17 | // group the data for report\n  18 | async function prepareDataSource() {\n> 19 |     console.log(window.location)\n     |                 ^\n  20 |     const orders = await fetchOrders()\n  21 |     const ordersByShipCountry = orders.reduce((a, v) => {\n  22 |         a[v.ShipCountry] = a[v.ShipCountry] || []\n\n(sandbox.js line 53:29)\n\n  51 | // add jsreport hook which modifies the report input data\n  52 | async function beforeRender(req, res) {\n> 53 |     req.data.orders = await prepareDataSource()\n     |                             ^\n  54 | }\n\n(sandbox.js line 66:18)","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst https = require('https');\n\n// call remote http rest api\nfunction fetchOrders() {\n    return new Promise((resolve, reject) => {\n        https.get(`https://services.odata.org/V4/Northwind/Northwind.svc/Orders`,\n        (result) => {\n            var str = '';\n            result.on('data', (b) => str += b);\n            result.on('error', reject);\n            result.on('end', () => resolve(JSON.parse(str).value));\n        });\n    })\n}\n\n// group the data for report\nasync function prepareDataSource() {\n    console.log(window.location)\n    const orders = await fetchOrders()\n    const ordersByShipCountry = orders.reduce((a, v) => {\n        a[v.ShipCountry] = a[v.ShipCountry] || []\n        a[v.ShipCountry].push(v)\n        return a\n    }, {})\n\n    return Object.keys(ordersByShipCountry).map((country) => {\n        const ordersInCountry = ordersByShipCountry[country]\n\n        const accumulated = {}\n\n        ordersInCountry.forEach((o) => {\n            o.OrderDate = new Date(o.OrderDate);\n            const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n            accumulated[key] = accumulated[key] || {\n                value: 0,\n                orderDate: o.OrderDate\n            };\n            accumulated[key].value++;\n        });\n\n        return {\n            rows: ordersInCountry,\n            country,\n            accumulated\n        }\n\n    }).slice(0, 2)\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"lstihu1tiuuxl7r","id":"bt8ojl47ljxod6i","stack":"ReferenceError: window is not defined\n    at prepareDataSource (sandbox.js:19:17)\n    at Object.beforeRender (sandbox.js:53:29)\n    at executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:35)\n    at sandbox.js:66:18\n    at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:137:16)\n    at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n    at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","message":"Error when evaluating custom script /samples/Orders/orders-script\nwindow is not defined\n\n(sandbox.js line 19:17)\n\n  17 | // group the data for report\n  18 | async function prepareDataSource() {\n> 19 |     console.log(window.location)\n     |                 ^\n  20 |     const orders = await fetchOrders()\n  21 |     const ordersByShipCountry = orders.reduce((a, v) => {\n  22 |         a[v.ShipCountry] = a[v.ShipCountry] || []\n\n(sandbox.js line 53:29)\n\n  51 | // add jsreport hook which modifies the report input data\n  52 | async function beforeRender(req, res) {\n> 53 |     req.data.orders = await prepareDataSource()\n     |                             ^\n  54 | }\n\n(sandbox.js line 66:18)"}
