{"type":"operationStart","subtype":"profile","data":{"_id":"yRtk4nDGBYfgX51I","timestamp":"2024-01-14T18:05:09.310Z","state":"queued","mode":"standard","creationDate":"2024-01-14T18:05:09.315Z","modificationDate":"2024-01-14T18:05:09.315Z","shortid":"rJWFfSW","$entitySet":"profiles"},"doDiffs":false,"timestamp":1705255509312,"id":"diqzrnsklj2ypgy","previousOperationId":null,"operationId":"jxank94boetnp99"}
{"type":"log","level":"info","message":"Render request 2 queued for execution and waiting for available worker","previousOperationId":"jxank94boetnp99","timestamp":1705255509313,"id":"xmit5cc15v9ycv3"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"jxank94boetnp99","timestamp":1705255509337,"id":"rgcqp7c255nmyvm","previousEventId":"diqzrnsklj2ypgy","operationId":"num51ybi67hddj1"}
{"type":"log","timestamp":1705255509339,"level":"info","message":"Starting rendering request 2","meta":{"rootId":"cnv65h9ofunllso","id":"cnv65h9ofunllso"},"id":"ru2slbkdp2a82qj","previousOperationId":"num51ybi67hddj1"}
{"type":"log","timestamp":1705255509341,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"cnv65h9ofunllso","id":"cnv65h9ofunllso"},"id":"1v5mxew0g1uig7g","previousOperationId":"num51ybi67hddj1"}
{"type":"log","timestamp":1705255509344,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"cnv65h9ofunllso","id":"cnv65h9ofunllso"},"id":"4ft26fzehkjl96b","previousOperationId":"num51ybi67hddj1"}
{"type":"log","timestamp":1705255509350,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"cnv65h9ofunllso","id":"cnv65h9ofunllso"},"id":"je1x5ixdw9iobd5","previousOperationId":"num51ybi67hddj1"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1705255509739,"id":"b32x17idq5fx0j3","previousEventId":"rgcqp7c255nmyvm","operationId":"haf8cu0fle2994a","previousOperationId":"num51ybi67hddj1"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"haf8cu0fle2994a","timestamp":1705255509739,"id":"e8hn1wpceciufug","previousEventId":"b32x17idq5fx0j3","operationId":"scivw4a3wrqgud1"}
{"type":"log","timestamp":1705255509776,"level":"warn","message":"Error when processing render request 2\n(because) error when evaluating custom script /samples/Orders/orders-script\nlocations is not defined\n\n(sandbox.js line 43:20)\n\n  41 | async function prepareDataSource() {\n  42 |   const orders = await fetchOrders();\n> 43 |     const source = locations.map((location) => {\n     |                    ^\n  44 |       name: location.name;\n  45 |       numEventos: location.numEvento;\n  46 |   });\n\n(sandbox.js line 52:21)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |   req.data.orders = await prepareDataSource();\n     |                     ^\n  53 | }\n  54 |\n\n\nReferenceError: locations is not defined\n    at prepareDataSource (sandbox.js:43:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Object.beforeRender (sandbox.js:52:21)\n    at async executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:137:16)\n    at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n    at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","meta":{"rootId":"cnv65h9ofunllso","id":"cnv65h9ofunllso"},"id":"e5hbe7steqghx1a","previousOperationId":"scivw4a3wrqgud1"}
{"type":"log","timestamp":1705255509776,"level":"warn","message":"Rendering request 2 finished with error in 466 ms","meta":{"rootId":"cnv65h9ofunllso","id":"cnv65h9ofunllso"},"id":"lcj94wllfebg86s","previousOperationId":"scivw4a3wrqgud1"}
{"type":"error","timestamp":1705255509791,"statusCode":400,"weak":true,"lineNumber":43,"decoratedSuffix":"\n\n(sandbox.js line 43:20)\n\n  41 | async function prepareDataSource() {\n  42 |   const orders = await fetchOrders();\n> 43 |     const source = locations.map((location) => {\n     |                    ^\n  44 |       name: location.name;\n  45 |       numEventos: location.numEvento;\n  46 |   });\n\n(sandbox.js line 52:21)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |   req.data.orders = await prepareDataSource();\n     |                     ^\n  53 | }\n  54 |\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require(\"http\");\n\n// call remote http rest api\nfunction fetchOrders() {\n  return new Promise((resolve, reject) => {\n    http.get(\n      \"http://localhost:8080/api/locations/count-localizaciones\",\n      (result) => {\n        let str = \"\";\n\n        result.on(\"data\", (chunk) => {\n          str += chunk;\n        });\n\n        result.on(\"error\", (err) => {\n          reject(err);\n        });\n\n        result.on(\"end\", () => {\n          try {\n            const parsedData = JSON.parse(str);\n            // Verificar que 'localizaciones' existe en la respuesta JSON\n            if (parsedData && parsedData.localizaciones) {\n              resolve(parsedData.localizaciones);\n            } else {\n              reject(\n                new Error(\"El formato de la respuesta no es el esperado.\")\n              );\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n      }\n    );\n  });\n}\n\n// group the data for report\nasync function prepareDataSource() {\n  const orders = await fetchOrders();\n    const source = locations.map((location) => {\n      name: location.name;\n      numEventos: location.numEvento;\n  });\n  console.log(source);\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n  req.data.orders = await prepareDataSource();\n}\n"},"property":"content","logged":true,"previousOperationId":"scivw4a3wrqgud1","id":"5ute8awht1b6tt3","stack":"ReferenceError: locations is not defined\n    at prepareDataSource (sandbox.js:43:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Object.beforeRender (sandbox.js:52:21)\n    at async executionFn (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:137:16)\n    at async WorkerReporter.runInSandbox [as _runInSandbox] (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:195:14)\n    at async executeScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\arida\\Dev\\2DAM\\EventFlow\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","message":"Error when evaluating custom script /samples/Orders/orders-script\nlocations is not defined\n\n(sandbox.js line 43:20)\n\n  41 | async function prepareDataSource() {\n  42 |   const orders = await fetchOrders();\n> 43 |     const source = locations.map((location) => {\n     |                    ^\n  44 |       name: location.name;\n  45 |       numEventos: location.numEvento;\n  46 |   });\n\n(sandbox.js line 52:21)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |   req.data.orders = await prepareDataSource();\n     |                     ^\n  53 | }\n  54 |\n\n"}
